doctype html
html
  head
    title RIC
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js') // p5js library
    script(src='https://cdn.jsdelivr.net/npm/apexcharts') // Include Apex Charts library
    
  body
    script(src='/javascripts/sketch.js')
    script(src='/javascripts/pureknob.js')
    #p5js
    .speeds
      #speed0
        .chart#chart0
      #speed1
        .chart#chart1
      #speed2
        .chart#chart2
      #speed3
        .chart#chart3
      #speed4
        .chart#chart4
      #speed5
        .chart#chart5

    script.

      function fetchDataAndUpdateKnob() {
        for (let i = 0 ; i < 6 ; i++) {
        fetch('srs/speed/' + i)
            .then(response => response.json())
            .then(data => {
              knobs[i].setValue(data.speed || 0);
            })
            .catch(error => console.error('Error fetching data:', error));
        }
      }

      const knobs = [];

      for (let i = 0 ; i < 6 ; i++) {
        const knob = pureknob.createKnob(150, 150);
        knob.setProperty('angleStart', -0.75 * Math.PI);
        knob.setProperty('angleEnd', 0.75 * Math.PI);
        knob.setProperty('colorFG', '#000000');
        knob.setProperty('colorBG', '#AAAAAA');
        knob.setProperty('colorLabel', '#000000');
        knob.setProperty('label', 'ue_' + i);
        knob.setProperty('trackWidth', 0.4);
        knob.setProperty('valMin', 0);
        knob.setProperty('valMax', 2000);
        knob.setValue(0);
        document.getElementById('speed' + i).appendChild(knob.node());
        knobs[i] = knob;
      }

      function fetchDataAndUpdateChart() {
        // Make API call to fetch data
        fetch('srs/chart')
          .then(response => response.json())
          .then(data => {
            for (let i = 0 ; i < charts.length ; i++) {
              charts[i].updateSeries(data[i]);
            }
          })
          .catch(error => console.error('Error fetching data:', error));
      }
  
      // Create initial chart configuration
      const options = {
        chart: {
            type: 'line',
            height: 130,
            width: 600,
            animations: {
                enabled: false
            },
            toolbar: { show: false },
        },
        stroke: {
            curve: 'smooth',
            width: 2
        },
        series: [{ data: [] }],
        xaxis: {
            categories: [],
            labels: {
              show: false
            }
        },
        yxais: {
          min: 0,
          max: 2000
        }
      };
  
      // Create chart instance
      const charts = [
        new ApexCharts(document.querySelector("#chart0"), options),
        new ApexCharts(document.querySelector("#chart1"), options),
        new ApexCharts(document.querySelector("#chart2"), options),
        new ApexCharts(document.querySelector("#chart3"), options),
        new ApexCharts(document.querySelector("#chart4"), options),
        new ApexCharts(document.querySelector("#chart5"), options)
      ]
      // Render charts
      charts.forEach(chart => {
        chart.render();
      });

      fetchDataAndUpdateChart(); // Initial fetch
      setInterval(fetchDataAndUpdateChart, 1000); // Fetch every second
      setInterval(fetchDataAndUpdateKnob, 1000);

      
