doctype html
html
  head
    title RIC
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js') // p5js library
    
  body
    script(src='/javascripts/sketch.js')
    script(src='/javascripts/pureknob.js')
    #p5js
    .speeds
      #speed0
      #speed1
      #speed2
      #speed3
      #speed4
      #speed5

    script.

      function fetchDataAndUpdateKnob() {
        for (let i = 0 ; i < 6 ; i++) {
        fetch('srs/speed/' + i)
            .then(response => response.json())
            .then(data => {
              const ue = ues[i];
              //- if (ue && ue.gnb) {
              //-   console.log(ue.gnb.color);
              //-   knobs[i].setProperty('colorFG', ue.gnb.color);
              //- }
              knobs[i].setValue(data.speed || 0);
            })
            .catch(error => console.error('Error fetching data:', error));
        }
      }

      const knobs = [];

      for (let i = 0 ; i < 6 ; i++) {
        const knob = pureknob.createKnob(150, 150);
        knob.setProperty('angleStart', -0.75 * Math.PI);
        knob.setProperty('angleEnd', 0.75 * Math.PI);
        knob.setProperty('colorFG', '#000000');
        knob.setProperty('colorBG', '#AAAAAA');
        knob.setProperty('colorLabel', '#000000');
        knob.setProperty('label', 'ue_' + i);
        knob.setProperty('trackWidth', 0.4);
        knob.setProperty('valMin', 0);
        knob.setProperty('valMax', 2000);
        knob.setValue(0);
        document.getElementById('speed' + i).appendChild(knob.node());
        knobs[i] = knob;
      }


      setInterval(fetchDataAndUpdateKnob, 1000);

      
